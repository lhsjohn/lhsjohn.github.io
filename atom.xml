<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lhsjohn的博客</title>
  
  <subtitle>对未来的真正慷慨，是把一切献给现在</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.lhsjohn.com/"/>
  <updated>2018-09-03T08:46:18.466Z</updated>
  <id>https://www.lhsjohn.com/</id>
  
  <author>
    <name>lhsjohn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>String 字符串 (三)Prc3</title>
    <link href="https://www.lhsjohn.com/2018/09/03/String%20%E5%AD%97%E7%AC%A6%E4%B8%B2%20(%E4%B8%89%EF%BC%89Prc3/"/>
    <id>https://www.lhsjohn.com/2018/09/03/String 字符串 (三）Prc3/</id>
    <published>2018-09-03T08:26:24.000Z</published>
    <updated>2018-09-03T08:46:18.466Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&amp;lt;开学第一天&amp;gt;&lt;/p&gt;
&lt;p&gt;今日份dai码 |0-0|&lt;/p&gt;
&lt;h2 id=&quot;1-正则表达式与JAVA-I-O&quot;&gt;&lt;a href=&quot;#1-正则表达式与JAVA-I-O&quot; class=&quot;headerlink&quot; title=&quot;1.正则表达式与JAVA I/O&quot;&gt;&lt;/a&gt;1.正则表达式与JAVA I/O&lt;/h2&gt;&lt;p&gt;下面我们将演示如何应用正则表达式在文件中进行搜索匹配操作&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.lhsjohn.pr.&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: strings/JGrep.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// A very simple version of the &quot;grep&quot; program.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;Args: JGrep.java &quot;\\b[Ssct]\\w+&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.regex.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; class JGrep &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) throws Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Pattern p = Pattern.compile(&lt;span class=&quot;string&quot;&gt;&quot;\\b[Ssct]\\w+&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Matcher m = p.matcher(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextFile(&lt;span class=&quot;string&quot;&gt;&quot;F:\\Study\\java\\DesignerPattern\\PracticeString\\src\\com\\lhsjohn\\pr\\string\\JGrep.java&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      m.reset(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;while&lt;/span&gt;(m.&lt;span class=&quot;built_in&quot;&gt;find&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(index++ + &lt;span class=&quot;string&quot;&gt;&quot;: &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          m.group() + &lt;span class=&quot;string&quot;&gt;&quot;: &quot;&lt;/span&gt; + m.start());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="学习" scheme="https://www.lhsjohn.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Thinking in java" scheme="https://www.lhsjohn.com/tags/Thinking-in-java/"/>
    
  </entry>
  
  <entry>
    <title>String 字符串 (二）Prac2</title>
    <link href="https://www.lhsjohn.com/2018/09/02/String%20%E5%AD%97%E7%AC%A6%E4%B8%B2%20(%E4%BA%8C%EF%BC%89Prac2/"/>
    <id>https://www.lhsjohn.com/2018/09/02/String 字符串 (二）Prac2/</id>
    <published>2018-09-02T13:52:24.000Z</published>
    <updated>2018-09-02T14:41:59.465Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-试用正则表达式&quot;&gt;&lt;a href=&quot;#1-试用正则表达式&quot; class=&quot;headerlink&quot; title=&quot;1.试用正则表达式&quot;&gt;&lt;/a&gt;1.试用正则表达式&lt;/h2&gt;&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(?i)((^&lt;span class=&quot;string&quot;&gt;[aeiou]&lt;/span&gt;)|(\s+&lt;span class=&quot;string&quot;&gt;[aeiou]&lt;/span&gt;))\w+?&lt;span class=&quot;string&quot;&gt;[aeiou]&lt;/span&gt;\b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意事项：&lt;br&gt;(?!)表示匹配时不区分大小写&lt;/p&gt;
&lt;p&gt;?匹配前面的子表达式0次或者多次&lt;br&gt;+匹配前面的子表达式1次或者多次&lt;/p&gt;
&lt;p&gt;整个正则表达式合起来为 匹配以元音字母开始元音字母结尾的单词&lt;/p&gt;
&lt;h2 id=&quot;来匹配&quot;&gt;&lt;a href=&quot;#来匹配&quot; class=&quot;headerlink&quot; title=&quot;来匹配&quot;&gt;&lt;/a&gt;来匹配&lt;/h2&gt;&lt;p&gt;“Arline ate eight apples and one orange while Anita hadn’t any”&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.lhsjohn.pr.&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.regex.Matcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.regex.Pattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; class TestRegularExpression11 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(args.length &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Usage:\njava TestRegularExpression &quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&quot;characterSequence regularExpression+&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Input: \&quot;&quot;&lt;/span&gt; + args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; arg : args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Regular expression: \&quot;&quot;&lt;/span&gt; + arg + &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Pattern p = Pattern.compile(arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Matcher m = p.matcher(args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(!m.&lt;span class=&quot;built_in&quot;&gt;find&lt;/span&gt;()) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;No match found for &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt; + arg + &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			m.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;while&lt;/span&gt;(m.&lt;span class=&quot;built_in&quot;&gt;find&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Match \&quot;&quot;&lt;/span&gt; + m.group() + &lt;span class=&quot;string&quot;&gt;&quot;\&quot; at position &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					m.start() + ((m.&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;() - m.start() &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) ? &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; :  (&lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt; + (m.&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="学习" scheme="https://www.lhsjohn.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Thinking in java" scheme="https://www.lhsjohn.com/tags/Thinking-in-java/"/>
    
  </entry>
  
  <entry>
    <title>String 字符串 (一）Prac1</title>
    <link href="https://www.lhsjohn.com/2018/09/01/String%20%E5%AD%97%E7%AC%A6%E4%B8%B2%20(%E4%B8%80%EF%BC%89Prac1/"/>
    <id>https://www.lhsjohn.com/2018/09/01/String 字符串 (一）Prac1/</id>
    <published>2018-09-01T15:24:24.000Z</published>
    <updated>2018-09-02T14:34:13.333Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-无意识的递归&quot;&gt;&lt;a href=&quot;#1-无意识的递归&quot; class=&quot;headerlink&quot; title=&quot;1.无意识的递归&quot;&gt;&lt;/a&gt;1.无意识的递归&lt;/h2&gt;&lt;figure class=&quot;highlight haxe&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.lhsjohn.pr.string;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 迭代打印本类的地址信息,在这里可以把所有的宽度提取成常量，需要修改时只需要修改一处即可。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @author lihuashuo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InfiniteRecursion&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; toString() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//return &quot;InfiniteRecursion address: &quot; + this + &quot;\n&quot;; 这样写会报错，原因是将this转换成String时无意识调用了this的toString(),造成递归&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;InfiniteRecursion address: &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.toString() + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;InfiniteRecursion&amp;gt; v=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;InfiniteRecursion&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;( int i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++ )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    	v.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;InfiniteRecursion&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      System.out.println(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="学习" scheme="https://www.lhsjohn.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Thinking in java" scheme="https://www.lhsjohn.com/tags/Thinking-in-java/"/>
    
  </entry>
  
  <entry>
    <title>Java的反射机制 (一）</title>
    <link href="https://www.lhsjohn.com/2018/08/31/Java%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%20(%E4%B8%80%EF%BC%89%E6%A6%82%E5%BF%B5%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/"/>
    <id>https://www.lhsjohn.com/2018/08/31/Java的反射机制 (一）概念以及常见用法/</id>
    <published>2018-08-31T09:29:24.000Z</published>
    <updated>2018-08-31T15:21:32.836Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2018-08-31-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
      <category term="反射机制" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="反射机制" scheme="https://www.lhsjohn.com/tags/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>&lt;&lt;本杰明·巴顿奇事&gt;&gt;经典台词收录</title>
    <link href="https://www.lhsjohn.com/2018/08/25/%E6%9C%AC%E6%9D%B0%E6%98%8E%E5%B7%B4%E9%A1%BF%E5%A5%87%E4%BA%8B%E7%BB%8F%E5%85%B8%E5%8F%B0%E8%AF%8D/"/>
    <id>https://www.lhsjohn.com/2018/08/25/本杰明巴顿奇事经典台词/</id>
    <published>2018-08-25T09:29:24.000Z</published>
    <updated>2018-08-25T09:52:51.116Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;终于抽出来时间看了这部想看了很久的电影，一部爱情奇幻类的影片，有创意和脑洞，布拉德皮特演绎的完美饰演赋予了这部电影生命。&lt;/p&gt;
&lt;p&gt;像&amp;lt;&amp;lt;泰坦尼克号&amp;gt;&amp;gt;一样,倒叙的方式开场,本杰明留下的牛皮书作为线索，推动着对整个情节的叙述。&lt;/p&gt;
&lt;p&gt;大体懵懵懂懂看了第一遍看完了，算不上理解的特别透彻，但是却很喜欢里面的一些经典台词。&lt;/p&gt;
&lt;p&gt;下面是从网络上收集的一些比较经典的台词,这部电影的成功之处在于，当你听到类似的台词时，你肯定会毫不犹豫想到这部电影。&lt;/p&gt;
&lt;p&gt;并非鸡汤化的台词，只是人性的缩影。&lt;br&gt;(突然发现,代码块不仅可以写代码，还可以装台词 苦笑、、、、、)&lt;/p&gt;
    
    </summary>
    
      <category term="观后感" scheme="https://www.lhsjohn.com/categories/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
      <category term="影评" scheme="https://www.lhsjohn.com/categories/%E8%A7%82%E5%90%8E%E6%84%9F/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="杂谈" scheme="https://www.lhsjohn.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="影评" scheme="https://www.lhsjohn.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
      <category term="生活" scheme="https://www.lhsjohn.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>vue-axios</title>
    <link href="https://www.lhsjohn.com/2018/08/24/Vue-axios(1)/"/>
    <id>https://www.lhsjohn.com/2018/08/24/Vue-axios(1)/</id>
    <published>2018-08-24T15:02:24.000Z</published>
    <updated>2018-08-31T13:36:23.198Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;参考地址：&lt;a href=&quot;https://www.kancloud.cn/yunye/axios/234845&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kancloud.cn/yunye/axios/234845&lt;/a&gt;&lt;br&gt;参考地址：&lt;a href=&quot;https://github.com/axios/axios&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/axios/axios&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。&lt;/p&gt;
&lt;p&gt;2.优势：&lt;/p&gt;
&lt;p&gt;  从浏览器中创建 XMLHttpRequests&lt;/p&gt;
&lt;p&gt;  从 node.js 创建 http 请求&lt;/p&gt;
&lt;p&gt;  支持 Promise API&lt;/p&gt;
&lt;p&gt;  拦截请求和响应&lt;/p&gt;
&lt;p&gt;  转换请求数据和响应数据&lt;/p&gt;
&lt;p&gt;  取消请求&lt;/p&gt;
&lt;p&gt;  自动转换 JSON 数据&lt;/p&gt;
&lt;p&gt;  客户端支持防御 XSRF&lt;/p&gt;
&lt;p&gt;3.安装：&lt;/p&gt;
&lt;p&gt;  npm install axios –save&lt;/p&gt;
&lt;p&gt;4.引入：&lt;/p&gt;
&lt;p&gt;  import Axios from “axios”&lt;/p&gt;
&lt;p&gt;  Vue.prototype.$axios = Axios&lt;/p&gt;
&lt;p&gt;5.应用：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;this.$axios(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method:&lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ur&lt;span class=&quot;variable&quot;&gt;l:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;http://www.wwtliu.com/sxtstu/news/juhenews.php&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  param&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;yule&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    coun&lt;span class=&quot;variable&quot;&gt;t:30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt; =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;res&lt;/span&gt;.data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(error =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="javaScript" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/javaScript/"/>
    
      <category term="Vue.js" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/javaScript/Vue-js/"/>
    
    
      <category term="Vue.js" scheme="https://www.lhsjohn.com/tags/Vue-js/"/>
    
      <category term="axios" scheme="https://www.lhsjohn.com/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>设计模式思考(五)-----适配器模式</title>
    <link href="https://www.lhsjohn.com/2018/08/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%9D%E8%80%83(%E4%BA%94)-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F(1)/"/>
    <id>https://www.lhsjohn.com/2018/08/23/设计模式思考(五)-适配器模式(1)/</id>
    <published>2018-08-23T15:02:24.000Z</published>
    <updated>2018-08-31T13:32:38.591Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;适配器模式的定义&quot;&gt;&lt;a href=&quot;#适配器模式的定义&quot; class=&quot;headerlink&quot; title=&quot;适配器模式的定义&quot;&gt;&lt;/a&gt;适配器模式的定义&lt;/h1&gt;&lt;p&gt;  将一个类的接口，转换成客户所期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。&lt;/p&gt;
&lt;p&gt;  类图：&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;/images/2018-08-23.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;  这里有四个名词，需要理解一下&lt;/p&gt;
&lt;p&gt;  Client: 客户端，调用自己需要领域的接口Target&lt;/p&gt;
&lt;p&gt;  Target: 定义客户端需要的跟特定领域相关的接口&lt;/p&gt;
&lt;p&gt;  Adaptee: 已经存在的接口，但是与客户端所需领域的接口要求不一致，需要被适配(例如是方法名字不一致)&lt;/p&gt;
&lt;p&gt;  Adapter: 适配器，把Adaptee适配成Client需要的Target&lt;/p&gt;
&lt;h1 id=&quot;Example1&quot;&gt;&lt;a href=&quot;#Example1&quot; class=&quot;headerlink&quot; title=&quot;Example1&quot;&gt;&lt;/a&gt;Example1&lt;/h1&gt;&lt;h2 id=&quot;Adaptee-java&quot;&gt;&lt;a href=&quot;#Adaptee-java&quot; class=&quot;headerlink&quot; title=&quot;Adaptee.java&quot;&gt;&lt;/a&gt;Adaptee.java&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.lhsjohn.adapter.example1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 已经存在的接口，这个接口需要被适配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @author lihuashuo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Adaptee&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * 示意方法，原本已经存在，已经实现了的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;specificRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//具体的功能处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Target-java&quot;&gt;&lt;a href=&quot;#Target-java&quot; class=&quot;headerlink&quot; title=&quot;Target.java&quot;&gt;&lt;/a&gt;Target.java&lt;/h2&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.lhsjohn.adapter.example1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 定义客户端使用的接口，与特定领域相关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @author lihuashuo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Target&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * 示意方法，客户端请求处理的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;request&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Adapter-java&quot;&gt;&lt;a href=&quot;#Adapter-java&quot; class=&quot;headerlink&quot; title=&quot;Adapter.java&quot;&gt;&lt;/a&gt;Adapter.java&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.lhsjohn.adapter.example1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 适配器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Adapter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Target&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//持有需要被适配的接口对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Adaptee adaptee;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * 构造方法，传入需要被适配的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; adaptee&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Adapter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Adaptee adaptee)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.adaptee = adaptee;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//可能转调已经实现了的方法，进行适配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		adaptee.specificRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的登录拦截器</title>
    <link href="https://www.lhsjohn.com/2018/08/22/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%99%BB%E5%BD%95%E6%8B%A6%E6%88%AA%E5%99%A8(1)/"/>
    <id>https://www.lhsjohn.com/2018/08/22/一个简单的登录拦截器(1)/</id>
    <published>2018-08-22T13:07:03.000Z</published>
    <updated>2018-08-31T13:37:37.991Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; cn.e3mall.cart.interceptor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.lang3.StringUtils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.beans.factory.annotation.Autowired;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.HandlerExceptionResolver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.HandlerInterceptor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.ModelAndView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cn.e3mall.common.utils.CookieUtils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cn.e3mall.common.utils.E3Result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cn.e3mall.pojo.TbUser;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cn.e3mall.sso.service.TokenService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 用户登录拦截器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; lihuashuo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LoginInterceptor&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandlerInterceptor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TokenService tokenService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; preHandle(HttpServletRequest request, HttpServletResponse response, Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//前处理，执行handler之前处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//返回 true,放行 false:拦截&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//1.从cookie中取token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String token = CookieUtils.getCookieValue(request, &lt;span class=&quot;string&quot;&gt;&quot;token&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//2.如果没有token,未登录状态，直接放行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(StringUtils.isBlank(token)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//3.取到token,需要调用sso系统的服务，根据token取用户信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		E3Result e3Result = tokenService.getUserByToken(token);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//4.没有取到用户信息。登录过期，直接放行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(e3Result.getStatus()!=&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//5.取到用户信息。登录状态。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		TbUser user =(TbUser) e3Result.getData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//6.把用户信息放到request中，只需要在Controller中判断是否包含user信息。放行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request.setAttribute(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, user);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; postHandle(HttpServletRequest request, HttpServletResponse response, Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ModelAndView modelAndView) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//handler执行之后,返回ModeAndView之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; afterCompletion(HttpServletRequest request, HttpServletResponse response, Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;, Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//完成处理,返回ModelAndView之后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;comment&quot;&gt;//可以在此处理异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
      <category term="Spring" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/Spring/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="Intercepter" scheme="https://www.lhsjohn.com/tags/Intercepter/"/>
    
  </entry>
  
  <entry>
    <title>SSO单点登录</title>
    <link href="https://www.lhsjohn.com/2018/08/19/SSO%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%A4%84%E7%90%86/"/>
    <id>https://www.lhsjohn.com/2018/08/19/SSO单点登录处理/</id>
    <published>2018-08-19T11:00:03.000Z</published>
    <updated>2018-08-31T13:35:08.526Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;集群环境下的登录&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/images/2018-08-19-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 在集群环境下可能会出现要求用户多次登录的情况(配置了负载均衡后无法实现Session共享)&lt;/p&gt;
&lt;p&gt; 解决方案&lt;br&gt;   1.可以配置tomcat集群,配置tomcatSession复制，节点数不要超过5个&lt;br&gt;   2.可以使用Session服务器，保存Session信息，模拟Session.&lt;/p&gt;
&lt;p&gt;   单点登录系统是使用redis模拟Session,实现Session的统一管理&lt;/p&gt;
    
    </summary>
    
      <category term="项目" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/"/>
    
      <category term="SSO单点登录" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/SSO%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="SSO单点登录" scheme="https://www.lhsjohn.com/tags/SSO%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ</title>
    <link href="https://www.lhsjohn.com/2018/08/17/ActiveMQ/"/>
    <id>https://www.lhsjohn.com/2018/08/17/ActiveMQ/</id>
    <published>2018-08-17T07:41:03.000Z</published>
    <updated>2018-08-31T13:34:52.192Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;What-is-ActiveMQ&quot;&gt;&lt;a href=&quot;#What-is-ActiveMQ&quot; class=&quot;headerlink&quot; title=&quot;What is ActiveMQ?&quot;&gt;&lt;/a&gt;What is ActiveMQ?&lt;/h1&gt;&lt;p&gt;   ActiveMQ 是Apache出品，最流行的，能力强劲的开源消息总线。ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现,尽管JMS规范出台已经是很久的事情了,但是JMS在当今的J2EE应用中间仍然扮演着特殊的地位。&lt;br&gt;主要特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多种语言和协议编写客户端。语言: Java, C, C++, C#, Ruby, Perl, Python, PHP。应用协议: OpenWire,Stomp REST,WS Notification,XMPP,AMQP&lt;/li&gt;
&lt;li&gt;完全支持JMS1.1和J2EE 1.4规范 (持久化,XA消息,事务)&lt;/li&gt;
&lt;li&gt;对Spring的支持,ActiveMQ可以很容易内嵌到使用Spring的系统里面去,而且也支持Spring2.0的特性&lt;/li&gt;
&lt;li&gt;通过了常见J2EE服务器(如 Geronimo,JBoss 4, GlassFish,WebLogic)的测试,其中通过JCA 1.5 resource adaptors的配置,可以让ActiveMQ可以自动的部署到任何兼容J2EE 1.4 商业服务器上&lt;/li&gt;
&lt;li&gt;支持多种传送协议:in-VM,TCP,SSL,NIO,UDP,JGroups,JXTA&lt;/li&gt;
&lt;li&gt;支持通过JDBC和journal提供高速的消息持久化&lt;/li&gt;
&lt;li&gt;从设计上保证了高性能的集群,客户端-服务器,点对点&lt;/li&gt;
&lt;li&gt;支持Ajax&lt;/li&gt;
&lt;li&gt;支持与Axis的整合&lt;/li&gt;
&lt;li&gt;可以很容易得调用内嵌JMS provider,进行测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;ActiveMQ的消息形式&quot;&gt;&lt;a href=&quot;#ActiveMQ的消息形式&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ的消息形式&quot;&gt;&lt;/a&gt;ActiveMQ的消息形式&lt;/h1&gt;&lt;p&gt;对于消息的传递有两种类型：&lt;/p&gt;
&lt;p&gt;一种是点对点的，即一个生产者和一个消费者一一对应；&lt;/p&gt;
&lt;p&gt;另一种是发布/订阅模式，即一个生产者产生消息并进行发送后，可以由多个消费者进行接收。&lt;/p&gt;
&lt;p&gt;JMS定义了五种不同的消息正文格式，以及调用的消息类型，允许你发送并接收以一些不同形式的数据，提供现有消息格式的一些级别的兼容性。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;　　· StreamMessage – Java原始值的数据流&lt;/li&gt;
&lt;li&gt;　　· MapMessage–一套名称-值对&lt;/li&gt;
&lt;li&gt;　　· TextMessage–一个字符串对象&lt;/li&gt;
&lt;li&gt;　　· ObjectMessage–一个序列化的 Java对象&lt;/li&gt;
&lt;li&gt;　　· BytesMessage–一个字节的数据流&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;img src=&quot;/images/2018-08-17.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="项目" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/"/>
    
      <category term="ActiveMQ" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/ActiveMQ/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="ActiveMQ" scheme="https://www.lhsjohn.com/tags/ActiveMQ/"/>
    
  </entry>
  
  <entry>
    <title>SolrCloud，一个分布式搜索方案</title>
    <link href="https://www.lhsjohn.com/2018/08/14/SolrCloud%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E6%96%B9%E6%A1%88/"/>
    <id>https://www.lhsjohn.com/2018/08/14/SolrCloud，一个分布式搜索方案/</id>
    <published>2018-08-14T15:17:16.000Z</published>
    <updated>2018-08-31T13:34:27.160Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近搞分布式搜索服务的实现，一直受到性能的瓶颈制约，单机版的solr服务对于少数用户体验还可以，但是涉及到几千的并发的时候，难免会造成性能的突然下降。&lt;/p&gt;
&lt;p&gt;下面是一套利用solr和zookeeper实现的分布式搜索架构方案&lt;/p&gt;
&lt;h1 id=&quot;Solr集群的系统架构&quot;&gt;&lt;a href=&quot;#Solr集群的系统架构&quot; class=&quot;headerlink&quot; title=&quot;Solr集群的系统架构&quot;&gt;&lt;/a&gt;Solr集群的系统架构&lt;/h1&gt;&lt;p&gt; &lt;img src=&quot;/images/2018-08-14-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 三个Solr实例（ 每个实例包括两个Core），组成一个SolrCloud。&lt;/p&gt;
&lt;p&gt; 索引集合包括两个Shard（shard1和shard2），shard1和shard2分别由三个Core组成，其中一个Leader两个Replication，Leader是由zookeeper选举产生，zookeeper控制每个shard上三个Core的索引数据一致，解决高可用问题。&lt;br&gt;用户发起索引请求分别从shard1和shard2上获取，解决高并发问题。&lt;/p&gt;
&lt;p&gt;Collection在SolrCloud集群中是一个逻辑意义上的完整的索引结构。它常常被划分为一个或多个Shard（分片），它们使用相同的配置信息。&lt;br&gt;比如：针对商品信息搜索可以创建一个collection。&lt;br&gt; collection=shard1+shard2+….+shardX&lt;/p&gt;
&lt;p&gt; 每个Core是Solr中一个独立运行单位，提供 索引和搜索服务。一个shard需要由一个Core或多个Core组成。由于collection由多个shard组成所以collection一般由多个core组成。&lt;/p&gt;
&lt;p&gt; Master是master-slave结构中的主结点（通常说主服务器），Slave是master-slave结构中的从结点（通常说从服务器或备服务器）。同一个Shard下master和slave存储的数据是一致的，这是为了达到高可用目的。&lt;/p&gt;
&lt;p&gt; Collection的逻辑分片。每个Shard被化成一个或者多个replication，通过选举确定哪个是Leader。&lt;/p&gt;
    
    </summary>
    
      <category term="项目" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="solr+zookeeper" scheme="https://www.lhsjohn.com/tags/solr-zookeeper/"/>
    
      <category term="linux" scheme="https://www.lhsjohn.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>fastdfs</title>
    <link href="https://www.lhsjohn.com/2018/08/11/fastdfs/"/>
    <id>https://www.lhsjohn.com/2018/08/11/fastdfs/</id>
    <published>2018-08-11T03:17:16.000Z</published>
    <updated>2018-08-31T13:35:00.504Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;FastDFS是C语言开发，建议在linux上运行，下面使用Centos6.4作为安装环境。&lt;br&gt;安装FastDFS需要先将官网下载的源码进行编译，编译依赖gcc环境，如果没有gcc环境，需要安装gcc：yum install gcc-c++&lt;/p&gt;
&lt;h2 id=&quot;安装libevent&quot;&gt;&lt;a href=&quot;#安装libevent&quot; class=&quot;headerlink&quot; title=&quot;安装libevent&quot;&gt;&lt;/a&gt;安装libevent&lt;/h2&gt;&lt;p&gt;FastDFS依赖libevent库，需要安装：&lt;/p&gt;
&lt;p&gt;yum -y install libevent&lt;/p&gt;
&lt;h2 id=&quot;安装libfastcommon&quot;&gt;&lt;a href=&quot;#安装libfastcommon&quot; class=&quot;headerlink&quot; title=&quot;安装libfastcommon&quot;&gt;&lt;/a&gt;安装libfastcommon&lt;/h2&gt;&lt;p&gt;libfastcommon是FastDFS官方提供的，libfastcommon包含了FastDFS运行所需要的一些基础库。&lt;br&gt;将libfastcommonV1.0.7.tar.gz拷贝至/usr/local/下&lt;/p&gt;
&lt;p&gt;cd /usr/local&lt;/p&gt;
&lt;p&gt;tar -zxvf  libfastcommonV1.0.7.tar.gz&lt;/p&gt;
&lt;p&gt;cd libfastcommon-1.0.7&lt;br&gt;./make.sh&lt;/p&gt;
&lt;p&gt;./make.sh install&lt;/p&gt;
&lt;p&gt;注意：libfastcommon安装好后会自动将库文件拷贝至/usr/lib64下，由于FastDFS程序引用usr/lib目录所以需要将/usr/lib64下的库文件拷贝至/usr/lib下。&lt;/p&gt;
&lt;h2 id=&quot;tracker编译安装&quot;&gt;&lt;a href=&quot;#tracker编译安装&quot; class=&quot;headerlink&quot; title=&quot;tracker编译安装&quot;&gt;&lt;/a&gt;tracker编译安装&lt;/h2&gt;&lt;p&gt;将FastDFS_v5.05.tar.gz拷贝至/usr/local/下&lt;/p&gt;
&lt;p&gt;tar -zxvf FastDFS_v5.05.tar.gz&lt;/p&gt;
&lt;p&gt;cd FastDFS&lt;/p&gt;
&lt;p&gt;./make.sh&lt;/p&gt;
&lt;p&gt;./make.sh install&lt;/p&gt;
&lt;p&gt;安装成功将安装目录下的conf下的文件拷贝到/etc/fdfs/下。&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;安装成功后进入/etc/fdfs目录：&lt;br&gt;拷贝一份新的tracker配置文件：&lt;/p&gt;
&lt;p&gt;cp tracker.conf.sample tracker.conf&lt;/p&gt;
&lt;p&gt;修改tracker.conf&lt;br&gt;vi tracker.conf&lt;br&gt;base_path=/home/yuqing/FastDFS&lt;br&gt;改为：&lt;br&gt;base_path=/home/FastDFS&lt;/p&gt;
&lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart&lt;br&gt;启动的日志显示先停止5619进程（实际环境不是5619）&lt;/p&gt;
&lt;h2 id=&quot;设置开机启动&quot;&gt;&lt;a href=&quot;#设置开机启动&quot; class=&quot;headerlink&quot; title=&quot;设置开机启动&quot;&gt;&lt;/a&gt;设置开机启动&lt;/h2&gt;
    
    </summary>
    
      <category term="项目" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/"/>
    
      <category term="fastdfs" scheme="https://www.lhsjohn.com/categories/%E9%A1%B9%E7%9B%AE/java/fastdfs/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="linux" scheme="https://www.lhsjohn.com/tags/linux/"/>
    
      <category term="fastdfs" scheme="https://www.lhsjohn.com/tags/fastdfs/"/>
    
  </entry>
  
  <entry>
    <title>Pom文件</title>
    <link href="https://www.lhsjohn.com/2018/08/08/Pom%E6%96%87%E4%BB%B6/"/>
    <id>https://www.lhsjohn.com/2018/08/08/Pom文件/</id>
    <published>2018-08-08T03:45:16.000Z</published>
    <updated>2018-08-17T10:08:59.561Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight dust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="Spring" scheme="https://www.lhsjohn.com/categories/Spring/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="Spring" scheme="https://www.lhsjohn.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>设计模式思考(四)-----单件模式</title>
    <link href="https://www.lhsjohn.com/2018/08/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%9D%E8%80%83(%E5%9B%9B)-----%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.lhsjohn.com/2018/08/07/设计模式思考(四)-----单件模式/</id>
    <published>2018-08-07T09:40:24.000Z</published>
    <updated>2018-08-31T13:32:31.190Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;单件模式的定义&quot;&gt;&lt;a href=&quot;#单件模式的定义&quot; class=&quot;headerlink&quot; title=&quot;单件模式的定义&quot;&gt;&lt;/a&gt;单件模式的定义&lt;/h1&gt;&lt;p&gt;确保一个类只有一个实例，并提供一个全局访问点。&lt;/p&gt;
&lt;h1 id=&quot;类图&quot;&gt;&lt;a href=&quot;#类图&quot; class=&quot;headerlink&quot; title=&quot;类图&quot;&gt;&lt;/a&gt;类图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/2018-08-07-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.其中uniqueInstance 变量持有唯一的单间实例&lt;/p&gt;
&lt;p&gt;2.getInstance()方法是静态的，这意味着它是一个类方法，所以可以在代码的任何地方使用Singleton.getnstance()访问它。这样和访问全局变量一样，只是多了一个优点：单件可以延迟实例化。&lt;/p&gt;
&lt;p&gt;3.单件模式的类也可以是一般的类，具有一般的数据和方法。&lt;/p&gt;
&lt;p&gt;下面是一个单件模式的经典实现：&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>一道算法题</title>
    <link href="https://www.lhsjohn.com/2018/08/06/%E4%B8%80%E9%81%93%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    <id>https://www.lhsjohn.com/2018/08/06/一道算法题/</id>
    <published>2018-08-06T08:59:01.000Z</published>
    <updated>2018-08-06T09:01:02.079Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;算法题:请用js根据网站用户的内裤颜色调改变网站主题文字颜色。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018-08-06-2.jpg&quot;
        
      
    
    </summary>
    
      <category term="段子" scheme="https://www.lhsjohn.com/categories/%E6%AE%B5%E5%AD%90/"/>
    
    
      <category term="段子" scheme="https://www.lhsjohn.com/tags/%E6%AE%B5%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>threadqiushi.py</title>
    <link href="https://www.lhsjohn.com/2018/08/06/threadqiushi.py/"/>
    <id>https://www.lhsjohn.com/2018/08/06/threadqiushi.py/</id>
    <published>2018-08-05T16:36:03.000Z</published>
    <updated>2018-08-31T13:35:40.144Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="python" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python" scheme="https://www.lhsjohn.com/tags/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="多线程" scheme="https://www.lhsjohn.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>生活带有主观性  —— 二刷《当幸福来敲门》</title>
    <link href="https://www.lhsjohn.com/2018/08/05/%E7%94%9F%E6%B4%BB%E5%B8%A6%E6%9C%89%E4%B8%BB%E8%A7%82%E6%80%A7%E4%BA%8C%E5%88%B7%E3%80%8A%E5%BD%93%E5%B9%B8%E7%A6%8F%E6%9D%A5%E6%95%B2%E9%97%A8%E3%80%8B/"/>
    <id>https://www.lhsjohn.com/2018/08/05/生活带有主观性二刷《当幸福来敲门》/</id>
    <published>2018-08-05T10:31:09.000Z</published>
    <updated>2018-08-25T09:54:04.372Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;“黑夜给了我黑色的眼睛，我却用它寻找光明”。这是顾城的一句经典语录，如果可以的话，我想把这个经典语录赋予给这个拥有灵魂的电影。&lt;/p&gt;
&lt;p&gt;这部电影带给你最大的震撼或许就是，不同的成长阶段，你对他的感受会有所不同吧。&lt;/p&gt;
&lt;p&gt;第一次观看这部电影大概是在三年前，高二的时候。应试型的教育形式一遍又一遍的在你身边重复显现，或许就真的变成了考试的机器一般，学习与考试，你的时间完全不在你手上，做不了自己喜欢的事情，成绩再好也毫无意义。&lt;/p&gt;
&lt;p&gt;也就在这个状态之下，我观看了这么一部电影。&lt;br&gt;这或许也是看到开头就能知道故事结局的一部电影，但是它确实有足够的魅力来吸引人们去观看它，去思考我们眼睛看不到的地方。&lt;/p&gt;
&lt;p&gt;“克里斯·加德纳，生活在旧金山的黑人男青年，靠做推销员养着老婆还有幼子。克里斯从没觉得日子过得很幸福，当然也没很痛苦，就跟美国千千万普通男人一样过着平淡的生活，直到有一天，一系列突如其来的变故才让克里斯知道，原来平淡的日子有多珍贵。&lt;/p&gt;
&lt;p&gt;首先，他丢了工作，公司裁员让他丢了饭碗。克里斯从此遭遇了一连串重大打击，妻子因忍受不了长期的贫困生活愤而出走，连六岁大的儿子（杰登·史密斯）也一同带走。没过多久，妻子又把儿子还给了克里斯，从此克里斯不仅要面对失业的困境，还要独立抚养儿子。没过多久，克里斯因长期欠交房租被房东赶出家门，带着儿子流落街头。在接下的两三年中，这对苦命父子的住所从纸皮箱搬到公共卫生间。克里斯坚强面对困境时刻打散工赚钱，同时也努力培养孩子乐观面对困境的精神，父子俩日子虽苦，但还是能快乐生活。&lt;br&gt;一次，克里斯在停车场遇见一个开高级跑车的男人，克里斯问他做什么工作才能过上这样的生活，那男人告诉他自己是做股票经纪人的，克里斯从此就决定自己要做一个出色的股票经纪人，和儿子过上好日子。完全没有股票知识的克里斯靠着毅力在华尔街一家股票公司当上学徒，头脑灵活的他很快就掌握了股票市场的知识，随后开上了自己的股票经纪公司，最后成为百万富翁。&lt;br&gt;一路上克里斯经历了不少挫折，但是年幼的儿子每次都能给予他最大的鼓励，两父子相互扶持最终完成了又一个美国梦。”&lt;/p&gt;
&lt;p&gt;克里斯是幸运的的也是不幸运的。&lt;/p&gt;
&lt;p&gt;他的不幸运来源于他之前的穷困潦倒，虽然这部电影并没有给我们介绍他之前的背景，我们也就无法得知他现在处境的原因，电影的开头只是给我们说明了确实有这么一个处境，至于其他的部分，就由你来想吧!&lt;/p&gt;
&lt;p&gt;或许是他年轻时候的不努力也或者是他年轻时因为某些变故造成的自己与机会的远离。但是在那个年代，机会似乎也没有那么多。&lt;/p&gt;
&lt;p&gt;高二的时候看这部影片，确实是一部实实在在的励志电影，一个人靠着自己坚定的意志力和常人难以接受的决定来改变自己的人生。给我当时增加了不少的动力，这些动力，来源于他的勇敢。&lt;/p&gt;
&lt;p&gt;成功一帆风顺固然很好，但是如果你走的道路太顺利了，只能说明这条路很多人和你一样走过。&lt;/p&gt;
&lt;p&gt;克里斯是一个真正的爷们，他的刚强，并不是一些人眼中所说的身强体壮，而是他重重的责任感以及永不抱怨的精神。&lt;br&gt;即便在最为穷困的时候，也给自己孩子买了心爱的生日礼物，带着孩子吃甜点而自己也只是在旁边看着，妻子离她而去，自己也毅然而然扛起了生活的重担。&lt;br&gt;看电影的时候都会为他感到着急，为什么运气会那么差，“屋漏偏逢天阴雨”，又看到屏幕上的一个个的弹幕，有庆幸自己成功的，也有刚失败激励自己重头再来的，只能说是，事态纷杂，每个人的经历都不一样，获得真正意义上的成功，又有几个呢？&lt;/p&gt;
&lt;p&gt;他的幸运是让他在人生最为低谷的时候抓住了机会，我们看到的，机会不是别人送来的，是他自己争取来的，有他的努力，当然与他与人坦诚相处的态度也是分不开的。&lt;/p&gt;
&lt;p&gt;今天又把这部电影看了一遍，思考的角度与当年却有些不同。&lt;/p&gt;
&lt;p&gt;现在，我觉得克里斯是不幸的。&lt;/p&gt;
&lt;p&gt;首先是对于成功的定义，我觉得这是一部被资本化了的电影，首先故事的背景就是发生在资本化的美国，人们以金钱来衡量自己的财富，作为判断自己的人生成败的重要标准。&lt;/p&gt;
&lt;p&gt;这种价值观，太过于“唯物”。&lt;/p&gt;
&lt;p&gt;也许大家沉浸于他的改变中无所自拔，想象着这大概就是生活最为美好的情况。&lt;br&gt;
    
    </summary>
    
      <category term="观后感" scheme="https://www.lhsjohn.com/categories/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
      <category term="影评" scheme="https://www.lhsjohn.com/categories/%E8%A7%82%E5%90%8E%E6%84%9F/%E5%BD%B1%E8%AF%84/"/>
    
    
      <category term="杂谈" scheme="https://www.lhsjohn.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="影评" scheme="https://www.lhsjohn.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
      <category term="励志" scheme="https://www.lhsjohn.com/tags/%E5%8A%B1%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>ez_setup.py</title>
    <link href="https://www.lhsjohn.com/2018/08/04/ez_setup.py/"/>
    <id>https://www.lhsjohn.com/2018/08/04/ez_setup.py/</id>
    <published>2018-08-04T03:37:03.000Z</published>
    <updated>2018-08-31T13:33:48.999Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="python" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python" scheme="https://www.lhsjohn.com/tags/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>设计模式思考(三)装饰者模式</title>
    <link href="https://www.lhsjohn.com/2018/08/02/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%9D%E8%80%83(%E4%B8%89)-----%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.lhsjohn.com/2018/08/02/设计模式思考(三)-----装饰者模式/</id>
    <published>2018-08-02T14:09:03.000Z</published>
    <updated>2018-08-31T13:32:23.487Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;装饰者模式的定义&quot;&gt;&lt;a href=&quot;#装饰者模式的定义&quot; class=&quot;headerlink&quot; title=&quot;装饰者模式的定义&quot;&gt;&lt;/a&gt;装饰者模式的定义&lt;/h1&gt;&lt;p&gt;装饰者模式动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更有弹性的替代方案。&lt;/p&gt;
&lt;p&gt;可以这么说：“装饰者模式给爱用继承的人一个全新的眼界”&lt;/p&gt;
&lt;p&gt;下面来看一个装饰者模式的使用案例&lt;/p&gt;
&lt;p&gt;对于一家咖啡店的订单系统，起初所有种类咖啡的类都是继承自饮料类的(Beverage),其中饮料类是一个抽象的类，内有description的实例变量，用来描述所做的饮料，有cost()方法来返回价钱。&lt;/p&gt;
&lt;p&gt;但是我们都知道，咖啡的种类有很多很多种，加入的调料也不尽相同，比如说我们可以定制摩卡咖啡，奶泡咖啡等，且这些调料的价钱也是不尽相同的，或许我们最初想法是再将咖啡的种类根据调料来进行划分，派生出更多的子类出来，但是这种做法是不明智的，咖啡的种类有成千上百种，调料也有成千上百种，照这个思想进行下去的话，岂不是要派生出一大堆类出来，这对于系统的维护来说也将是一个棘手的事情。&lt;/p&gt;
&lt;p&gt;那么，有没有其他的解决方案呢？&lt;/p&gt;
&lt;p&gt;答案是肯定的，在这里就是需要用到一个经典的设计模式——装饰者模式。&lt;/p&gt;
&lt;p&gt;在这个例子中，我们要以饮料为主体，然后在运行时以调料来装饰饮料。举个栗子，如果顾客想要一杯摩卡和奶泡深焙咖啡，我们要做的事情有&lt;/p&gt;
&lt;p&gt;1.拿一个深焙咖啡(DarkRoast)对象&lt;/p&gt;
&lt;p&gt;2.以摩卡(Mocha)对象装饰它&lt;/p&gt;
&lt;p&gt;3.以奶泡(Whip)对象装饰它&lt;/p&gt;
&lt;p&gt;4.调用cost()方法，并依赖委托将调料的价钱加上去&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="java" scheme="https://www.lhsjohn.com/tags/java/"/>
    
      <category term="设计模式" scheme="https://www.lhsjohn.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>urllib2爬虫初级 (二)</title>
    <link href="https://www.lhsjohn.com/2018/08/01/urllib2%E7%88%AC%E8%99%AB%E5%88%9D%E7%BA%A7(%E4%BA%8C%EF%BC%89/"/>
    <id>https://www.lhsjohn.com/2018/08/01/urllib2爬虫初级(二）/</id>
    <published>2018-08-01T09:05:21.000Z</published>
    <updated>2018-08-31T13:35:54.998Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;昨天用urllib模拟GET请求爬取了百度贴吧的一些内容，&lt;br&gt;但是现在网络上还有很多数据是通过POST请求获得的，更复杂的情况&lt;br&gt;是你要面临着如ajax的一些动态加载的数据，你所要获取的数据不能仅仅限于你在浏览器网页里看到的数据，所以在这里有几个处理的方法。&lt;/p&gt;
&lt;h1 id=&quot;POST请求发送&quot;&gt;&lt;a href=&quot;#POST请求发送&quot; class=&quot;headerlink&quot; title=&quot;POST请求发送&quot;&gt;&lt;/a&gt;POST请求发送&lt;/h1&gt;&lt;p&gt;Request请求对象的里有data参数，它就是用在POST里的，我们要传送的数据就是这个参数data，data是一个字典，里面要匹配键值对&lt;/p&gt;
&lt;p&gt;下面是流行的一个比较火的学习案例，通过POST请求模拟有道词典的翻译(之所以选择有道词典，是因为有些翻译词典发起的请求是GET的，这就很狗血了)&lt;/p&gt;
&lt;p&gt;首先开启了我Chrome浏览器中的代理插件，要模仿有道词典翻译的工作我们需要得到有关的url以及data数据&lt;/p&gt;
&lt;p&gt;这些数据的获取是我们通过抓包获取的&lt;/p&gt;
&lt;p&gt;之前的博客写过我现在用的是Fiddler 来抓包的，功能还算比较强大用起来还是挺舒服的。&lt;/p&gt;
&lt;p&gt;输入“我爱python” 的文字进行翻译，点击翻译按钮来发起一个请求，如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018-08-01-1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="python" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/categories/%E5%AD%A6%E4%B9%A0/python/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python" scheme="https://www.lhsjohn.com/tags/python/"/>
    
      <category term="爬虫" scheme="https://www.lhsjohn.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
